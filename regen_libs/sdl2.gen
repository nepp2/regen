
// --------------- SDL Constants ------------------

def SDL_INIT_VIDEO = 32 as u32;
def SDL_WINDOWPOS_UNDEFINED = 536805376 as i32;
def SDL_WINDOW_SHOWN = 4 as u32;
def SDL_WINDOW_ALWAYS_ON_TOP = 32768 as u32;
def SDL_RENDERER_ACCELERATED = 2 as u32;

def SDL_DEFAULT_RENDER_INDEX = -1 as i32;

def sdl2 = load_library("shared_libs/SDL2");

def sdl_init =
  load_library_symbol(sdl2, "SDL_Init")
    as cfun(flags : u32) => i32;

// --------------- SDL Types ------------------

type SdlWindowHandle = ptr void;
type SdlRendererHandle = ptr void;
type SdlSurfaceHandle = ptr void;
type SdlTextureHandle = ptr void;

type SdlRect = struct {
  x : i32, y : i32, w : i32, h : i32
};

// https://wiki.libsdl.org/SDL_Keysym
type SdlKeysym = struct {
  scancode : u32,
  keycode : u32,
  mod : u16,
  unused : u32,
};

type SdlWindowEvent = struct {
  window_id : u32,
  event : u8,
  data1 : i32,
  data2 : i32,
};

type SdlKeyboardEvent = struct {
  window_id : u32,
  state : u8,
  is_repeat : u8,
  keysym : SdlKeysym,
};

type SdlMouseButtonEvent = struct {
  window_id : u32,
  which : u32,
  button : u8,
  state : u8,
  clicks : u8,
  padding1 : u8,
  x : i32,
  y : i32,
}

type SdlMouseMotionEvent = struct {
  window_id : u32,
  which : u32,
  state : u32,
  x : i32,
  y : i32,
  xrel : i32,
  yrel : i32,
}

// Event type codes
def SDL_QUIT = 256 as u32;
def SDL_WINDOWEVENT = 512 as u32;
def SDL_KEYDOWN = 768 as u32;
def SDL_KEYUP = 769 as u32;
def SDL_TEXTEDITING = 770 as u32;
def SDL_TEXTINPUT = 771 as u32;
def SDL_MOUSEDOWN = 1025 as u32;
def SDL_MOUSEUP = 1026 as u32;
def SDL_MOUSEMOTION = 1024 as u32;

type SdlEvent = struct {
  event_type : u32,
  timestamp : u32,
  content : sized_array(u64, 20),
};

def sdl_create_window =
  load_library_symbol(sdl2, "SDL_CreateWindow")
    as cfun(
      title : (ptr u8), x : i32, y : i32,
      w : i32, h : i32, flags : u32
    ) => SdlWindowHandle;

def sdl_destroy_window =
  load_library_symbol(sdl2, "SDL_DestroyWindow")
    as cfun(win : SdlWindowHandle) => void;

def sdl_get_window_id =
  load_library_symbol(sdl2, "SDL_GetWindowID")
    as cfun (win : SdlWindowHandle) => u32;

def sdl_set_window_position =
  load_library_symbol(sdl2, "SDL_SetWindowPosition")
    as cfun(window : SdlWindowHandle, x : i32, y : i32) => void;

def sdl_raise_window =
  load_library_symbol(sdl2, "SDL_RaiseWindow")
    as cfun(window : SdlWindowHandle) => void;

def sdl_poll_event =
  load_library_symbol(sdl2, "SDL_PollEvent")
    as cfun(event : ptr SdlEvent) => i32;

def sdl_create_renderer =
  load_library_symbol(sdl2, "SDL_CreateRenderer")
    as cfun(
      window : SdlWindowHandle,
      driver_index : i32,
      flags : u32,
    ) => SdlRendererHandle;

def sdl_set_blend_mode =
  load_library_symbol(sdl2, "SDL_SetRenderDrawBlendMode")
    as cfun(
      renderer : SdlRendererHandle,
      blend_mode_flag : u32,
    ) => i32;

def sdl_clear =
  load_library_symbol(sdl2, "SDL_RenderClear")
    as cfun(r : SdlRendererHandle) => i32;

def sdl_set_draw_color =
  load_library_symbol(sdl2, "SDL_SetRenderDrawColor")
    as cfun(
      renderer : SdlRendererHandle,
      r : u8, g : u8, b : u8, a : u8
    ) => i32;

def sdl_present =
  load_library_symbol(sdl2, "SDL_RenderPresent")
    as cfun(r : SdlRendererHandle) => void;

def sdl_draw_rect =
  load_library_symbol(sdl2, "SDL_RenderDrawRect")
    as cfun(renderer : SdlRendererHandle, rect : ptr SdlRect) => void;

def sdl_fill_rect =
  load_library_symbol(sdl2, "SDL_RenderFillRect")
    as cfun(renderer : SdlRendererHandle, rect : ptr SdlRect) => void;

def sdl_render_copy =
  load_library_symbol(sdl2, "SDL_RenderCopy")
    as cfun(
      r : SdlRendererHandle,
      tex : SdlTextureHandle,
      src : ptr SdlRect,
      dest : ptr SdlRect
    ) => void;

def sdl_create_texture_from_surface =
  load_library_symbol(sdl2, "SDL_CreateTextureFromSurface")
    as cfun(
      r : SdlRendererHandle,
      surface : SdlSurfaceHandle,
    ) => SdlTextureHandle;

// convenience functions for event handling

fun to_mouse_button_event(e : ptr SdlEvent) {
  (ref e.content) as (ptr SdlMouseButtonEvent)
};

fun to_mouse_motion_event(e : ptr SdlEvent) {
  (ref e.content) as (ptr SdlMouseMotionEvent)
};

fun to_keyboard_event(e : ptr SdlEvent) {
  (ref e.content) as (ptr SdlKeyboardEvent)
};

fun to_window_event(e : ptr SdlEvent) {
  (ref e.content) as (ptr SdlWindowEvent)
};

// ------------------ SDL2 Image -------------------


def IMG_INIT_JPG = 1 as u32;
def IMG_INIT_PNG = 2 as u32;
def IMG_INIT_TIF = 4 as u32;
def IMG_INIT_WEBP = 8 as u32;

load_library("shared_libs/libpng16-16");
load_library("shared_libs/libjpeg-9");
load_library("shared_libs/libtiff-5");
load_library("shared_libs/libwebp-7");
load_library("shared_libs/zlib1");
def sdl2_image = load_library("shared_libs/SDL2_image");

def sdl_img_init =
  load_library_symbol(sdl2_image, "IMG_Init")
    as cfun(flags : u32) => i32;

def sdl_img_load =
  load_library_symbol(sdl2_image, "IMG_Load")
    as cfun(path : ptr u8) => SdlSurfaceHandle;
