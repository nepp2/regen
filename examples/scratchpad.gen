
include(env, ref "examples/lib/prelude.gen");
include(env, ref "examples/lib/game.gen");

// indicates whether the game is paused
def paused = false;

// indicates the current time
def timer = tick_signal(1000 / 30);

// the input game events
def event_signal =
  game_input_signal(sdl_input_signal(), tick_signal(1000 / 30));

def buffer_size = 2000;

def game_event_log = struct {
  events : sized_array(game_event, buffer_size),
  len : i64,
};

def new_game_event = fun(log : ptr game_event_log, e : ptr game_event) {
  if !paused {
    if log.len < buffer_size {
      log.events[log.len] = *e;
      log.len = log.len + 1;
    }
  }
};

// state node holding a history of game events (only adds events when not paused)
def event_log = 0;

// updates based on the event log and the timer
def game_state = 0;

// draws the game state
def renderer = 0;

