
;; features required:
;; basic type inference
;; basic type checking
;; cast expressions
;; fn type definitions
;; loop macro

(def SDL_INIT_VIDEO 32)
(def SDL_QUIT 256)
(def SDL_WINDOWPOS_UNDEFINED 536805376)
(def SDL_WINDOW_SHOWN 4)
(def SDL_RENDERER_ACCELERATED 2)

(def u64_max 18446744073709551615)

(def sdl2
  (load_library (sym SDL2)))

(def sdl_init
  (cast (load_library_symbol sdl2 (sym SDL_Init)) (fn (u32) i32)))

(def sdl_create_window
  (cast
    (load_library_symbol sdl2 (sym SDL_CreateWindow))
    (fn ((title (ptr u8)) (x i32) (y i32) (w i32) (h i32) (flags u32)) sdl_window_handle)))

(def sdl_destroy_window
  (cast
    (load_library_symbol sdl2 (sym SDL_DestroyWindow))
    (fn (sdl_window_handle))))

;; fun(event : ptr(sdl_event)) => i32
(def sdl_poll_event
  (load_library_symbol sdl2 (sym SDL_PollEvent)))

;; fun(window : sdl_window_handle, index : i32, flags : u32) => sdl_renderer_handle
(def sdl_create_renderer
  (load_library_symbol sdl2 (sym SDL_CreateRenderer)))

;; fun(renderer : sdl_renderer_handle) => i32
(def sdl_clear
  (load_library_symbol sdl2 (sym SDL_RenderClear)))

;; fun(renderer : sdl_renderer_handle, r : u8, g : u8, b : u8, a : u8) => i32
(def sdl_set_draw_color
  (load_library_symbol sdl2 (sym SDL_SetRenderDrawColor)))

;; fun(renderer : sdl_renderer_handle)
(def sdl_present
  (load_library_symbol sdl2 (sym SDL_RenderPresent)))

;; x y w h
(def sdl_rect
  (tuple i32 i32 i32 i32))

;; fun(renderer : sdl_renderer_handle, rect : ptr(sdl_rect))
(def sdl_draw_rect
  (load_library_symbol sdl2 (sym SDL_RenderDrawRect)))

;; fun(renderer : sdl_renderer_handle, rect : ptr(sdl_rect))
(def sdl_fill_rect
  (load_library_symbol sdl2 (sym SDL_RenderFillRect)))

(def title "AAA")

(do
  (sdl_init SDL_INIT_VIDEO)
  (let win
    (sdl_create_window
      title
      SDL_WINDOWPOS_UNDEFINED SDL_WINDOWPOS_UNDEFINED
      800 600
      SDL_WINDOW_SHOWN))
  (let renderer
    (sdl_create_renderer win u64_max SDL_RENDERER_ACCELERATED))
  (let event_ptr (cast (malloc 1000) (ptr sdl_event)))
  (loop (
    (if (= 1 (sdl_poll_event event_ptr)) (
      (if (= (load_32 event_ptr) SDL_QUIT)
        (break)
      )
    ))
    (sdl_set_draw_color renderer 0 0 0 0)
    (sdl_clear renderer)
    (sdl_set_draw_color renderer 255 0 0 255)

    (let r (init sdl_rect 50 50 300 200))
    (sdl_fill_rect renderer (ref rect))
    (sdl_present renderer)
  ))
)
