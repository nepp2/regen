
def create_window = fun(title : string, width : i64, height : i64) {
  sdl_init(SDL_INIT_VIDEO);
  sdl_create_window(
    title.data, SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED,
    width as i32, height as i32, SDL_WINDOW_SHOWN)
};

def create_renderer = fun(window : SdlWindowHandle) {
  sdl_create_renderer(window, -1 as i32, SDL_RENDERER_ACCELERATED)
}

def tick_event_tag = 1;
def sdl_event_tag = 2;

// one of these pointers will be null
def Event = struct {
  tag : i64,
  input : SdlEvent,
  tick : i64,
};

embed define_list_type(#EventList, #Event);

def poll_input = fun(es : EventList, tick : i64) {
  let start_len = es.length;
  let e = zero_init SdlEvent;
  while sdl_poll_event(ref e) == (1 as i32) {
    let event = init Event(sdl_event_tag, e, tick);
    EventList::add(es, event);
  }
  let changed = es.length > start_len;
  changed
}

def flush_and_poll_input = fun(es : EventList, tick : i64) {
  if es.length > 0 {
    EventList::clear(es);
    poll_input(es, tick);
    true
  }
  else {
    poll_input(es, tick)
  }
}
